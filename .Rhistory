m$config(font = "Merriweather-Newscycle")
#m$event(sachin)
m$event(his)
m
his = yaml.load_file("data/history.yaml")
m = Timeline$new()
m$main(
headline =  '<a href="http://tw.linkedin.com/pub/mansun-kuo/82/3b4/344/" style="color: #000047">Mansun Kuo</a>',
type = 'default',
text = "Education and Experience",
startDate =  "1982,03,13",
asset = list(
#media = 'http://tw.linkedin.com/pub/mansun-kuo/82/3b4/344/'
media = "https://www.youtube.com/watch?v=RxbHvLgNl_4"
)
)
m$config(font = "Merriweather-Newscycle")
#m$event(sachin)
m$event(his)
m
his = yaml.load_file("data/history.yaml")
m = Timeline$new()
m$main(
headline =  '<a href="http://tw.linkedin.com/pub/mansun-kuo/82/3b4/344/" style="color: #000047">Mansun Kuo</a>',
type = 'default',
text = "Education and Experience",
startDate =  "1982,03,13",
asset = list(
#media = 'http://tw.linkedin.com/pub/mansun-kuo/82/3b4/344/'
media = "https://www.youtube.com/watch?v=RxbHvLgNl_4"
)
)
m$config(font = "Merriweather-Newscycle")
#m$event(sachin)
m$event(his)
m
library(yaml)
his = yaml.load_file("data/history.yaml")
m = Timeline$new()
m$main(
headline =  '<a href="http://tw.linkedin.com/pub/mansun-kuo/82/3b4/344/" style="color: #000047">Mansun Kuo</a>',
type = 'default',
text = "Education and Experience",
startDate =  "1982,03,13",
asset = list(
#media = 'http://tw.linkedin.com/pub/mansun-kuo/82/3b4/344/'
media = "https://www.youtube.com/watch?v=RxbHvLgNl_4"
)
)
m$config(font = "Merriweather-Newscycle")
#m$event(sachin)
m$event(his)
m
save
m$.->lib
m$.->LIB
m$LIB
m$lib
m$LIB
m$LIB$url
m$.->lib
m$'.'->lib
.libPaths("rCharts")
.libPaths()
find.package("rCharts")
?file.copy()
m$LIB$url
rcharts_lib = find.package("rCharts")
rcharts_lib
find.package("rCharts/libraries")
rcharts_lib = file.path(find.package("rCharts/libraries"),
"libraries/timeline")
rcharts_lib = file.path(find.package("rCharts"),
"libraries/timeline")
rcharts_lib
rcharts_lib = file.path(find.package("rCharts"),
"libraries/timeline")
file.copy(rcharts_lib, "libraries")
file.copy(rcharts_lib, "libs")
rcharts_lib
file.copy(rcharts_lib, "libraries", recursive = TRUE)
rcharts_lib
file.copy(rcharts_lib)
rcharts_lib = file.path(find.package("rCharts"),
"libraries/timeline")
file.copy(rcharts_lib, "libraries", recursive = TRUE)
?file.copy
rcharts_lib = file.path(find.package("rCharts"),
"libraries/timeline")
dir.create("libraries")
dir.create("libraries")
file.copy(rcharts_lib, "libraries", recursive = TRUE)
file.copy(rcharts_lib, "libraries", recursive = TRUE)
file.copy(rcharts_lib, "libraries", recursive = TRUE)
file.copy(rcharts_lib, "libraries", recursive = TRUE)
m$LIB$url
rcharts_local = "libraries/timeline"
rcharts_lib = file.path(find.package("rCharts"), rcharts_local)
rcharts_lib
?basename
dirname(rcharts_local)
rcharts_local = "libraries/timeline"
rcharts_lib = file.path(find.package("rCharts"), rcharts_local)
dir.create(dirname(rcharts_local))
rcharts_local = "libraries/timeline"
rcharts_lib = file.path(find.package("rCharts"), rcharts_local)
dir.create(dirname(rcharts_local))
file.copy(rcharts_lib, dirname(rcharts_local), recursive = TRUE)
rcharts_local = "libraries/timeline"
rcharts_lib = file.path(find.package("rCharts"), rcharts_local)
dir.create(dirname(rcharts_local))
file.copy(rcharts_lib, dirname(rcharts_local), recursive = TRUE)
m$LIB$url
m$LIB$url = rcharts_local
m$LIB$url
m$config(font = "Merriweather-Newscycle")
m$event(his)
m$save("charts/timeline.html")
library(yaml)
his = yaml.load_file("data/history.yaml")
m = Timeline$new()
m$main(
headline =  '<a href="http://tw.linkedin.com/pub/mansun-kuo/82/3b4/344/" style="color: #000047">Mansun Kuo</a>',
type = 'default',
text = "Education and Experience",
startDate =  "1982,03,13",
asset = list(
media = "https://www.youtube.com/watch?v=YSYmg6Bhukc"
)
)
rcharts_local = "libraries/timeline"
rcharts_lib = file.path(find.package("rCharts"), rcharts_local)
dir.create(dirname(rcharts_local))
file.copy(rcharts_lib, dirname(rcharts_local), recursive = TRUE)
m$LIB$url = rcharts_local
m$config(font = "Merriweather-Newscycle")
m$event(his)
m$save("charts/timeline.html")
m
his = yaml.load_file("data/history.yaml")
m = Timeline$new()
m$main(
headline =  '<a href="http://tw.linkedin.com/pub/mansun-kuo/82/3b4/344/" style="color: #000047">Mansun Kuo</a>',
type = 'default',
text = "Education and Experience",
startDate =  "1982,03,13",
asset = list(
media = "https://www.youtube.com/watch?v=YSYmg6Bhukc"
)
)
# rcharts_local = "libraries/timeline"
# rcharts_lib = file.path(find.package("rCharts"), rcharts_local)
# dir.create(dirname(rcharts_local))
# file.copy(rcharts_lib, dirname(rcharts_local), recursive = TRUE)
# m$LIB$url = rcharts_local
m$config(font = "Merriweather-Newscycle")
m$event(his)
m$save("charts/timeline.html")
m
rcharts_local = "charts/libraries/timeline"
rcharts_lib = file.path(find.package("rCharts"), rcharts_local)
dirname(rcharts_local)
rcharts_local = "charts/libraries/timeline"
rcharts_lib = file.path(find.package("rCharts"), rcharts_local)
dir.create(dirname(rcharts_local))
file.copy(rcharts_lib, dirname(rcharts_local), recursive = TRUE)
rcharts_local = "libraries/timeline"
rcharts_lib = file.path(find.package("rCharts"), rcharts_local)
rcharts_local = "charts/libraries/timeline"
rcharts_local = "charts/libraries/timeline"
rcharts_lib = file.path(find.package("rCharts"),
"libraries/timeline")
dir.create(dirname(rcharts_local))
file.copy(rcharts_lib, dirname(rcharts_local), recursive = TRUE)
m$LIB$url = rcharts_local
m$config(font = "Merriweather-Newscycle")
m$event(his)
m$save("charts/timeline.html")
his = yaml.load_file("data/history.yaml")
m = Timeline$new()
m$main(
headline =  '<a href="http://tw.linkedin.com/pub/mansun-kuo/82/3b4/344/" style="color: #000047">Mansun Kuo</a>',
type = 'default',
text = "Education and Experience",
startDate =  "1982,03,13",
asset = list(
media = "https://www.youtube.com/watch?v=YSYmg6Bhukc"
)
)
rcharts_local = "charts/libraries/timeline"
rcharts_lib = file.path(find.package("rCharts"),
"libraries/timeline")
dir.create(dirname(rcharts_local))
file.copy(rcharts_lib, dirname(rcharts_local), recursive = TRUE)
m$LIB$url = "libraries/timeline"
m$config(font = "Merriweather-Newscycle")
m$event(his)
m$save("charts/timeline.html")
?basename
worker_data
source('~/.active-rstudio-document', echo=TRUE)
str(worker_data)
histogram = gvisHistogram(worker_data$平均薪資)
?gvisHistogram
worker_data[,"平均薪資"]
?gvisHistogram
head(travel_data)
hist(travel_data$xpostdate)
str(travel_data)
hist(as.Date(travel_data$xpostdate))
hist(as.Date(travel_data$xpostdate), "days")
postdate_df = data.frame(postdate = as.Date(travel_data$xpostdate))
postdate_df = data.frame(postdate = as.Date(travel_data$xpostdate))
histtogram = gvisHistogram(postdate_df,
options = list()
)
postdate_df
as.POSIXct(travel_data$xpostdate)
postdate_df = data.frame(postdate = as.POSIXct(travel_data$xpostdate)
)
postdate_df = data.frame(postdate = as.POSIXct(travel_data$xpostdate)
histtogram = gvisHistogram(postdate_df,
options = list()
)
postdate_df = data.frame(postdate = as.POSIXct(travel_data$xpostdate))
histtogram = gvisHistogram(postdate_df,
options = list()
)
postdate_df = data.frame(postdate = as.Integer(as.Date(travel_data$xpostdate)))
postdate_df = data.frame(postdate = as.integer(as.Date(travel_data$xpostdate)))
postdate_df
histtogram = gvisHistogram(postdate_df,
options = list()
\c
?gvisHistogram
lat_df = data.frame(lat = travel_data$latitude)
lat_df = data.frame(lat = travel_data$latitude)
lat_df
lon_df = data.frame(lon = travel_data$longitude)
lat_df = data.frame(lat = travel_data$latitude)
lon_df = data.frame(lon = travel_data$longitude)
lat_df = data.frame(lat = travel_data$latitude)
histtogram = gvisHistogram(lon_df,
options = list()
)
histogram = gvisHistogram(lon_df,
options = list()
)
hist_lon = gvisHistogram(lon_df,
options = list()
)
hist_lon
plot(hist_lon)
lon_df = data.frame(lon = travel_data$longitude)
lat_df = data.frame(lat = travel_data$latitude)
hist_lon = gvisHistogram(lon_df,
lon_df
\c
lon_df = data.frame(lon = travel_data$longitude)
lat_df = data.frame(lat = travel_data$latitude)
hist_lon = gvisHistogram(lon_df,
options = list()
)
plot(hist_lon)
hist_lon = gvisHistogram(lon_df,
options = list()
)
hist_lon
hist1 <- gvisHistogram(dino)
plot(hist1)
lon_df
dino
?gvisHistogram
names(travel_data)
hist_lon = gvisHistogram(travel_data[, c("stitle", "longitude")],
options = list()
)
print(hist_lon, "chart")
plot(hist_lon)
travel_data[, c("stitle", "longitude")]
lon_df = data.frame(lon = round(travel_data$longitude, 1))
lon_df = data.frame(lon = round(as.numeric(travel_data$longitude, 1)))
hist_lon = gvisHistogram(travel_data[, c("stitle", "longitude")],
options = list()
)
plot(hist_lon)
str(travel_data)
lon_df = data.frame(lon = as.numeric(travel_data$longitude))
lon_df
str(lon_df)
lon_df = data.frame(lon = as.numeric(travel_data$longitude))
hist_lon = gvisHistogram(travel_data[, c("stitle", "longitude")],
options = list()
)
plot(hist_lon)
hist_lon = gvisHistogram(lon_df,
options = list()
)
plot(hist_lon)
hist_lon = gvisHistogram(lon_df,
options = list(vAxis = "{'title': 'count'}")
)
plot(hist_lon)
hist_lon = gvisHistogram(lon_df,
options = list(vAxis = "{'title': 'count'}",
hAxis = "{'title': 'longitude'}"
)
)
plot(hist_lon)
hist_lon = gvisHistogram(lon_df,
options = list(vAxis = "{'title': 'count'}",
hAxis = "{'title': 'longitude'}",
legend = "'position': 'none'"
)
)
plot(hist_lon)
hist_lon = gvisHistogram(lon_df,
options = list(vAxis = "{'title': 'count'}",
hAxis = "{'title': 'longitude'}",
legend = "{'position': 'none'}"
)
)
plot(hist_lon)
hist_lon = gvisHistogram(lon_df,
options = list(vAxis = "{'title': 'count'}",
hAxis = "{'title': 'longitude'}",
legend = "{'position': 'none'}",
width = 500, height = 500
)
)
plot(hist_lon)
hist_lon = gvisHistogram(lon_df,
options = list(vAxis = "{'title': 'count'}",
hAxis = "{'title': 'longitude'}",
legend = "{'position': 'none'}",
histogram = "{'hideBucketItems': 'true'}"
width = 500, height = 500
)
)
hist_lon = gvisHistogram(lon_df,
options = list(vAxis = "{'title': 'count'}",
hAxis = "{'title': 'longitude'}",
legend = "{'position': 'none'}",
histogram = "{'hideBucketItems': 'true'}",
width = 500, height = 500
)
)
plot(hist_lon)
hist(lon_df)
hist(lon_df$lon)
?gvisBarChart
hist_lon = gvisHistogram(lon_df,
options = list(vAxis = "{'title': 'Frequency'}",
hAxis = "{'title': 'Longitude'}",
legend = "{'position': 'none'}",
histogram = "{'hideBucketItems': 'true'}",
orientation = "orientation",
width = 500, height = 500
)
)
plot(hist_lon)
hist_lon = gvisHistogram(lon_df,
options = list(vAxis = "{'title': 'Frequency'}",
hAxis = "{'title': 'Longitude'}",
legend = "{'position': 'none'}",
histogram = "{'hideBucketItems': 'true'}",
orientation = "vertical",
width = 500, height = 500
)
)
hist_lon = gvisHistogram(lon_df,
options = list(vAxis = "{'title': 'Frequency'}",
hAxis = "{'title': 'Longitude'}",
legend = "{'position': 'none'}",
histogram = "{'hideBucketItems': 'true'}",
orientation = "vertical",
width = 500, height = 500
)
)
plot(hist_lon)
get_gvishist = function(df, title, orientation, width = 500, height = 500) {
gvishist = gvisHistogram(df,
options = list(vAxis = "{'title': 'Frequency'}",
hAxis = sprintf("{'title': '%s'}", title),
legend = "{'position': 'none'}",
histogram = "{'hideBucketItems': 'true'}",
orientation = orientation,
width = width, height = height
)
)
return(gvishist)
}
hist_lon = get_gvishist(lon_df, "Longitude", "horizontal")
plot(hist_lon)
hist_lat = get_gvishist(lat_df, "Latitude", "vertical")
plot(hist_lat)
lat_df = data.frame(lat = as.numeric(travel_data$latitude))
hist_lat = get_gvishist(lat_df, "Latitude", "vertical")
plot(hist_lat)
travel_data
str(travel_data)
hist_lat = get_gvishist(lat_df, "Latitude", "vertical")
hist_lon = get_gvishist(lon_df, "Longitude", "horizontal")
hist_latlon = gvisMerge(hist_lat, hist_lon, horizontal = TRUE)
plot(hist_latlon)
?swap
plot(hist_latlon)
hist_lat = gvisHistogram(df,
options = list(vAxis = "{'title': 'Latitude'}",
hAxis = "{'title': 'Frequency'}",
legend = "{'position': 'none'}",
histogram = "{'hideBucketItems': 'true'}",
orientation = "vertical",
width = width, height = height
)
)
hist_lon = gvisHistogram(df,
options = list(vAxis = "{'title': 'Frequency'}",
hAxis = "{'title': 'Longitude'}",
legend = "{'position': 'none'}",
histogram = "{'hideBucketItems': 'true'}",
orientation = "vertical",
width = 500, height = 500
)
)
hist_lat = gvisHistogram(data.frame(lat = as.numeric(travel_data$latitude))
options = list(vAxis = "{'title': 'Latitude'}",
hAxis = "{'title': 'Frequency'}",
legend = "{'position': 'none'}",
histogram = "{'hideBucketItems': 'true'}",
orientation = "vertical",
width = 500, height = 500
)
)
hist_lon = gvisHistogram(data.frame(lon = as.numeric(travel_data$longitude)),
options = list(vAxis = "{'title': 'Frequency'}",
hAxis = "{'title': 'Longitude'}",
legend = "{'position': 'none'}",
histogram = "{'hideBucketItems': 'true'}",
width = 500, height = 500
)
)
hist_latlon = gvisMerge(hist_lat, hist_lon, horizontal = TRUE)
plot(hist_latlon)
hist_lat = gvisHistogram(data.frame(lat = as.numeric(travel_data$latitude)),
options = list(vAxis = "{'title': 'Latitude'}",
hAxis = "{'title': 'Frequency'}",
legend = "{'position': 'none'}",
histogram = "{'hideBucketItems': 'true'}",
orientation = "vertical",
width = 500, height = 500
)
)
hist_lon = gvisHistogram(data.frame(lon = as.numeric(travel_data$longitude)),
options = list(vAxis = "{'title': 'Frequency'}",
hAxis = "{'title': 'Longitude'}",
legend = "{'position': 'none'}",
histogram = "{'hideBucketItems': 'true'}",
width = 500, height = 500
)
)
hist_latlon = gvisMerge(hist_lat, hist_lon, horizontal = TRUE)
plot(hist_latlon)
str(travel_data)
cat("data/history.yaml")
?cat
cat(readLines("data/history.yaml"))
cat(readChar("data/history.yaml"))
?readCitationFile
?readChar
cat(readChar("data/history.yaml", nchars = Inf))
cat(readChar("data/history.yaml", nchars = file.info("data/history.yaml")))
cat(readChar("data/history.yaml", nchars = file.info("data/history.yaml")$size))
file.info("data/history.yaml")
readChar("data/history.yaml", nchars = file.info("data/history.yaml")$size)
cat(readChar("data/history.yaml", nchars = file.info("data/history.yaml")$size))
cat("```",
readChar("data/history.yaml", nchars = file.info("data/history.yaml")$size),
"```"
)
cat("```yaml",
readChar("data/history.yaml", nchars = file.info("data/history.yaml")$size),
"```"
)
cat("```yaml\n",
readChar("data/history.yaml", nchars = file.info("data/history.yaml")$size),
"```"
)
?cat
library(shiny)
shiny::runApp('apps/cheatsheet')
shiny::runApp('apps/cheatsheet')
shiny::runApp('apps/cheatsheet')
?setRefClass
shiny::runApp('apps/googleVis_shiny')
shiny::runApp('apps/cheatsheet')
shiny::runApp('apps/googleVis_shiny')
shiny::runApp('apps/googleVis_shiny')
shiny::runApp('apps/googleVis_shiny')
shiny::runApp('apps/googleVis_shiny')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?gvisHistogram
library(knitr)
library(ggvis)
out = mtcars %>%
ggvis(x = ~wt, y = ~mpg) %>%
layer_smooths(se=TRUE, opacity := 0.5, opacity.hover := 0.75) %>%
layer_points(fill = ~factor(cyl), size := 50, size.hover := 200) %>%
set_options(hover_duration = 250)
out = out %>%  add_tooltip(function(data){paste0("Wt: ", data$wt, "<br>", "Mpg: ", as.character(data$mpg))}, "hover")
out
